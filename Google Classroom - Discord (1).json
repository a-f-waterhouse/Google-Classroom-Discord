{"files":[{"id":"b6b26de4-1674-4ab3-a263-4bcc682ab056","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/London\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [{\n      \"userSymbol\": \"Classroom\",\n      \"serviceId\": \"classroom\",\n      \"version\": \"v1\"\n    }]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"0aa46a3b-a43a-431f-9618-10949f88f12d","name":"Code","type":"server_js","source":"function sendToDiscord() {  \n  const classroom \u003d 0 /*insert classroom ID*/;  \n\n  let announcements \u003d Classroom.Courses.Announcements.list(classroom).announcements; //gets a list of ALL announcements\n  let resources \u003d Classroom.Courses.CourseWorkMaterials.list(classroom).courseWorkMaterial; //same but with RESOURCES\n\n  //ANNOUNCEMENTS\n  for(let i \u003d 0; i \u003c announcements.length; i++) //for each announcement\n  { \n    let postDate \u003d new Date(announcements[i].updateTime);    \n    let dateNow \u003d new Date(Date.now());\n    dateNow.setMinutes(dateNow.getMinutes() - 1);\n    \n    if(dateNow \u003c postDate) //if it has been posted in the last minute\n    {\n      var post \u003d \"\" ;\n      post+\u003d announcements[i].text; //add the text of the announcement\n      if(announcements[i].materials !\u003d null) //if it has materials\n      {        \n        for(let j \u003d 0; j \u003c announcements[i].materials.length; j++) //foreach material\n        {\n          if(announcements[i].materials[j].link !\u003d null) // if it is a link\n          {\n            post+\u003d \"\\n\" + announcements[i].materials[j].link.url + \"\\n\"; //add link           \n          }\n          else if(announcements[i].materials[j].driveFile !\u003d null) //if it is a file\n          {\n            post+\u003d \"\\n\" + announcements[i].materials[j].driveFile.driveFile.alternateLink + \"\\n\"; //add link to file            \n          }      \n          else \n          {\n            send(\"ERROR\", 13632027, \"E\") //otherwise send\n          }\n        }\n      }\n      Logger.log(post);\n      send(post, 8311585, \"A\"); //send to function below with topic \"A\"\n    }    \n  }\n\n\n  ////RESOURCES\n  for(let i \u003d 0; i \u003c resources.length; i++) //foreach resource\n  {    \n    Logger.log(resources[i].topicId + \" \" + resources[i].title)\n\n    let postDate \u003d new Date(resources[i].updateTime);    \n    let dateNow \u003d new Date(Date.now());\n    dateNow.setMinutes(dateNow.getMinutes() - 1);    \n\n    if(dateNow \u003c postDate) //if it has been posted in the last minute\n    {\n      var post \u003d \"\";\n      var topic \u003d \"\";\n\n      post+\u003d (\"## \" + resources[i].title + \"\\n\"); //add title [in large font]\n      if(resources[i].description!\u003d null) //if there is a description\n      {\n        post+\u003d(resources[i].description + \"\\n\"); //add description\n      }\n\n      //FILTERS BASED ON TOPIC\n      if(resources[i].topicId \u003d\u003d 0/*insert topic ID*/ ) \n      {\n        topic \u003d \"X\";\n      }\n      else\n      {\n        topic \u003d \"M\";\n      }\n\n      if(resources[i].materials !\u003d null) //if it has materials\n      {\n        for(let j \u003d 0; j \u003c resources[i].materials.length; j++) //foreach material\n        {\n          if(resources[i].materials[j].link !\u003d null) //if it is a link\n          {\n            post+\u003d \"\\n\" + resources[i].materials[j].link.url + \"\\n\"; //add link\n          }\n          else if(resources[i].materials[j].driveFile !\u003d null) //if it is a file\n          {\n            post+\u003d \"\\n\"+ resources[i].materials[j].driveFile.driveFile.alternateLink + \"\\n\"; //add link to file\n          }      \n          else \n          {\n            send(\"ERROR\", 13632027, \"E\") //otherwise send an error to the test channel\n          }  \n        }\n      }\n      send(post, 8311585, topic) //send to function below with topic as sorted above\n    }    \n  }\n}\n\n\nfunction send(message, colour, topic)\n{\n  var discordUrl \u003d\"**INSERT WEBHOOK URL**\";\n  if(topic \u003d\u003d \"X\")\n  {\n    discordUrl \u003d \"**INSERT WEBHOOK URL**\";\n  }\n  else if (topic \u003d\u003d \"E\")\n  {\n    discordUrl \u003d \"**INSERT WEBHOOK URL**\";\n  }  \n\n  var payload \u003d JSON.stringify({\"content\": \"\u003e \\n\\n\", \"embeds\": [{\"description\": message,\"color\": colour}]});  \n  Logger.log(payload);\n  \n  var params \u003d {\n    method: \"POST\",\n    payload: payload,\n    muteHttpExceptions: true,\n    contentType: \"application/json\"\n    };\n  var response \u003d UrlFetchApp.fetch(discordUrl, params);\n\n}"}]}